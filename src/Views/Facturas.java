/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controllers.ClienteController;
import Controllers.EmpleadoController;
import Controllers.FacturaController;
import Controllers.ReportController;
import Controllers.Utils.Utils;
import Entities.ArticuloFactura;
import Entities.Cliente;
import Entities.Empleado;
import Entities.Factura;
import Entities.SoldItem;
import Views.Constants.Constants;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author euris
 */
public class Facturas extends javax.swing.JFrame {
    private final FacturaController facturaController;
    private final ClienteController clienteController;
    private final EmpleadoController empleadoController;
    private final ReportController reportController;
    private final List<Factura> facturas;
    private final List<Empleado> empleados;
    private final DecimalFormat customFormat;
    private final DecimalFormat customFormatPrices;
    private final SimpleDateFormat dateFormat;
    private Factura facturaSelected;
        
    /**
     * Creates new form Facturas
     */
    public Facturas() {
        this.facturaController = new FacturaController();
        this.clienteController = new ClienteController();
        this.empleadoController = new EmpleadoController();
        this.reportController = new ReportController();
        this.facturas = this.facturaController.getAll();
        this.empleados = this.empleadoController.getAll();
        this.customFormat = new DecimalFormat("0.00");
        this.customFormatPrices = new DecimalFormat("$ ,##0.00");
        this.dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        this.facturaSelected = new Factura();
        init();
    }
    
    private void init() {
        initComponents();
        renderTableFacturas();
        setTitle("Facturas");
        setLocationRelativeTo(null);
        setResizable(false);
        jComboEmpleado.setVisible(false);
        btnCancelarCuadreCaja.setVisible(false);
        jPanel1.setBackground(Constants.Colors.LIGHT_BLUE);
    }
    
    private void getAllEmployees() {
        this.empleados.forEach(empleado -> {
            String employeeFullName = empleado.getName() + " " + empleado.getLastName();
            jComboEmpleado.addItem(employeeFullName);
        });
    }
    
    private void addRowToFacturaTable(DefaultTableModel model, Factura factura) {
        Cliente cliente = this.clienteController.getById(factura.getIdCustomer());
        Empleado empleado = this.empleadoController.getById(factura.getIdEmployee());
        String customerFullName = cliente.getName() + " " + cliente.getLastName();
        String employeeFullName = empleado.getName() + " " + empleado.getLastName();
        model.addRow(new Object[] {
            customerFullName,
            employeeFullName,
            factura.getCode(),
            factura.getRnc(),
            factura.getNif(),
            factura.getInvoiceType(),
            factura.getPaymentType(),
            this.customFormat.format(factura.getCash()),
            this.dateFormat.format(factura.getCreationDate())
        });
    } 
    
    private void addRowToArticulosVendidosTable(DefaultTableModel model, ArticuloFactura soldItem) {
        model.addRow(new Object[] {
            soldItem.getName(),
            soldItem.getQuantity(),
            this.customFormat.format(soldItem.getSale()),
            this.customFormat.format(soldItem.getItbis()),
            this.customFormat.format(soldItem.getSubTotal()),
            this.customFormat.format(soldItem.getSubTotal() + soldItem.getItbis())
        });
    }
    
    private void renderTableFacturas() {
        DefaultTableModel model = (DefaultTableModel)jTableFacturas.getModel();
        for (Factura factura: this.facturas) {
            addRowToFacturaTable(model, factura);
        }
    }
    
    private void renderTableArticulosVendidos(List<ArticuloFactura> soldItems) {
        DefaultTableModel model = (DefaultTableModel)jTableArticulosVendidos.getModel();
        for (ArticuloFactura soldItem: soldItems) {
            addRowToArticulosVendidosTable(model, soldItem);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFacturas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableArticulosVendidos = new javax.swing.JTable();
        btnImprimir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCuadreCaja = new javax.swing.JButton();
        btnEstadoCuenta = new javax.swing.JButton();
        btnPagoFactura = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jComboEmpleado = new javax.swing.JComboBox<>();
        btnCancelarCuadreCaja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Empleado", "Num. Factura", "RNC", "NIF", "Tipo de Factura", "Tipo de Pago", "Efectivo", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFacturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableFacturas);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Facturas");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Artículos vendidos");

        jTableArticulosVendidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "Precio Unidad", "ITBIS", "Sub Total", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableArticulosVendidos);

        btnImprimir.setBackground(new java.awt.Color(0, 0, 255));
        btnImprimir.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(255, 255, 255));
        btnImprimir.setText("Imprimir Factura");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 0, 255));
        btnEliminar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar Factura");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCuadreCaja.setBackground(new java.awt.Color(0, 0, 255));
        btnCuadreCaja.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCuadreCaja.setForeground(new java.awt.Color(255, 255, 255));
        btnCuadreCaja.setText("Cuadre de Caja");
        btnCuadreCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuadreCajaActionPerformed(evt);
            }
        });

        btnEstadoCuenta.setBackground(new java.awt.Color(0, 0, 255));
        btnEstadoCuenta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEstadoCuenta.setForeground(new java.awt.Color(255, 255, 255));
        btnEstadoCuenta.setText("Estado de Cuenta del Cliente");
        btnEstadoCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoCuentaActionPerformed(evt);
            }
        });

        btnPagoFactura.setBackground(new java.awt.Color(0, 0, 255));
        btnPagoFactura.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnPagoFactura.setForeground(new java.awt.Color(255, 255, 255));
        btnPagoFactura.setText("Pago de Facturas a Crédito");
        btnPagoFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagoFacturaActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(0, 0, 255));
        btnSalir.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jComboEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el empleado" }));
        jComboEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEmpleadoActionPerformed(evt);
            }
        });

        btnCancelarCuadreCaja.setBackground(new java.awt.Color(0, 0, 255));
        btnCancelarCuadreCaja.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCancelarCuadreCaja.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCuadreCaja.setText("Cancelar");
        btnCancelarCuadreCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCuadreCajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancelarCuadreCaja)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnCuadreCaja, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEstadoCuenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPagoFactura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelarCuadreCaja)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnImprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCuadreCaja)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEstadoCuenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPagoFactura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalir)
                        .addGap(21, 21, 21))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFacturasMouseClicked
        int[] indexes = jTableFacturas.getSelectedRows();
        if (indexes.length == 1) {
            Factura factura = this.facturas.get(indexes[0]);
            Utils.clearTable(jTableArticulosVendidos);
            renderTableArticulosVendidos(factura.getSoldItems());
            this.facturaSelected = factura;
        } else {
            Utils.clearTable(jTableArticulosVendidos);
        }
    }//GEN-LAST:event_jTableFacturasMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        if (this.facturaSelected.getId() > 0) {
            this.reportController.renderNuevaFactura(this.facturaSelected);
        } else {
            String message = !this.facturas.isEmpty() ? "Seleccione una factura" : "No hay facturas registradas";
            JOptionPane.showMessageDialog(null, message, "Message", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int[] rowIndexes = jTableFacturas.getSelectedRows();
        int length = rowIndexes.length;
        int firstIndex = length > 0 ? rowIndexes[0] : 0;
        String message = length == 0 ? "No hay facturas seleccionadas"
                : length == 1 ? "1 factura eliminada"
                : length + " facturas eliminadas";
        String confirmMessage = length == 1
                ? "¿Desea eliminar la factura seleccionada?"
                : "¿Desea eliminar las facturas seleccionadas?";
        
        int confirm = length > 0 
                ? JOptionPane.showConfirmDialog(null, confirmMessage, "Seleccione una opción", JOptionPane.YES_NO_OPTION) : -1; 
        
        if (confirm == 0) {
            for (int i = 0; i < rowIndexes.length; i++) {
                int idFactura = this.facturas.get(firstIndex).getId();
                DefaultTableModel model = (DefaultTableModel)jTableFacturas.getModel();

                model.removeRow(firstIndex);
                this.facturas.remove(firstIndex);
                this.facturaController.delete(idFactura);
            }
            Utils.clearTable(jTableArticulosVendidos);
        }
        if (confirm == 0 || confirm == -1)
            JOptionPane.showMessageDialog(null, message);  
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCuadreCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuadreCajaActionPerformed
        jComboEmpleado.setVisible(true);
        btnCancelarCuadreCaja.setVisible(true);
        getAllEmployees();
    }//GEN-LAST:event_btnCuadreCajaActionPerformed

    private void btnEstadoCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEstadoCuentaActionPerformed

    private void btnPagoFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagoFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPagoFacturaActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarCuadreCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCuadreCajaActionPerformed
        jComboEmpleado.setVisible(false);
        jComboEmpleado.removeAllItems();
        btnCancelarCuadreCaja.setVisible(false);
    }//GEN-LAST:event_btnCancelarCuadreCajaActionPerformed

    private void jComboEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEmpleadoActionPerformed
        int index = jComboEmpleado.getSelectedIndex(); 
        if (index > 0) {
            Empleado empleado = this.empleados.get(index - 1);
            String empleadoFullName = empleado.getName() + " " + empleado.getLastName();
            List<SoldItem> soldItems = new ArrayList<>();
            String dateFormated = this.dateFormat.format(new Date());
            float subTotal = 0, itbis = 0;

            for (Factura factura: this.facturas) {
                String creationDate  = this.dateFormat.format(factura.getCreationDate());
                if (creationDate.equals(dateFormated) && "Al Contado".equals(factura.getInvoiceType()) && factura.getIdEmployee() == empleado.getId()) {
                    for (ArticuloFactura articuloFactura: factura.getSoldItems()) {
                        SoldItem soldItem = new SoldItem();

                        soldItem.setCode(articuloFactura.getCode());
                        soldItem.setName(articuloFactura.getName());
                        soldItem.setQuantity(String.valueOf(articuloFactura.getQuantity()));
                        soldItem.setSale(this.customFormatPrices.format(articuloFactura.getSale()));
                        soldItem.setItbis(this.customFormatPrices.format(articuloFactura.getItbis()));
                        soldItem.setSubTotal(this.customFormatPrices.format(articuloFactura.getSubTotal()));
                        soldItems.add(soldItem);
                        subTotal+= articuloFactura.getSubTotal();
                        itbis+= articuloFactura.getItbis();
                    }
                }
            }

            if (!soldItems.isEmpty()) {
                String subTotalFormated = this.customFormatPrices.format(subTotal);
                String itbisFormated = this.customFormatPrices.format(itbis);
                String totalFormated = this.customFormatPrices.format(subTotal + itbis);

                this.reportController.renderCuadreCaja(soldItems, dateFormated, subTotalFormated, itbisFormated, totalFormated);
                btnCancelarCuadreCaja.doClick();
            } else {
                JOptionPane.showMessageDialog(null, "No hay facturas de " + empleadoFullName);
            }
        }
    }//GEN-LAST:event_jComboEmpleadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarCuadreCaja;
    private javax.swing.JButton btnCuadreCaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEstadoCuenta;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnPagoFactura;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> jComboEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableArticulosVendidos;
    private javax.swing.JTable jTableFacturas;
    // End of variables declaration//GEN-END:variables
}
